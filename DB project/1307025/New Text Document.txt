SELECT ID, NAME FROM DEVELOPER WHERE SALARY BETWEEN 50000 AND 70000;
SELECT ID, NAME FROM DEVELOPER WHERE PLATFORM LIKE '%C++%';
SELECT ID, NAME, EXPERIENCE_LEVEL FROM DEVELOPER ORDER BY SALARY;
SELECT ID, NAME, EXPERIENCE_LEVEL FROM DEVELOPER ORDER BY SALARY desc;
SELECT ID, NAME FROM CLIENT WHERE NAME IN ('ABC', 'DEF');
SELECT ID, NAME FROM CLIENT WHERE NAME IN (SELECT NAME FROM CLIENT WHERE USER_TYPE='PERMANENT');

SELECT p.ID, p.NAME FROM PROJECTS p UNION ALL SELECT c.ID, c.NAME FROM CLIENT c WHERE c.ID in (SELECT ID from PROJECT_MANAGER where SALARY>=50000);
SELECT p.ID, p.NAME FROM PROJECTS p UNION SELECT c.ID, c.NAME FROM CLIENT c WHERE c.ID in (SELECT ID from PROJECT_MANAGER where SALARY>=50000);
SELECT p.ID, p.NAME FROM PROJECTS p INTERSECT SELECT c.ID, c.NAME FROM CLIENT c WHERE c.ID in (SELECT ID from PROJECT_MANAGER where SALARY>=50000);
SELECT p.ID, p.NAME FROM PROJECTS p MINUS SELECT c.ID, c.NAME FROM CLIENT c WHERE c.ID in (SELECT ID from PROJECT_MANAGER where SALARY>=50000);

SELECT p.NAME, pm.NAME from PROJECTS p join PROJECT_MANAGER pm on p.MANAGER_ID=pm.ID;
SELECT p.NAME, pm.NAME from PROJECTS p join PROJECT_MANAGER pm USING (ID);

SELECT COUNT(ID) from CLIENT;
SELECT SUM(SALARY) as Developer_Salary from DEVELOPER;
SELECT AVG(SALARY) from PROJECT_MANAGER;
SELECT MAX(AGE) from DEVELOPER;
SELECT MIN(AGE) from DEVELOPER;

set serveroutput on;
declare   
client_no CLIENT.ID%type;
begin
	SELECT count(ID) INTO client_no FROM CLIENT;
	DBMS_OUTPUT.PUT_LINE('The number of client is : ' || client_no);
end;
/
show errors;